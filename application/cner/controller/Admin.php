<?phpnamespace app\cner\controller;use app\cner\controller\Base;use think\Session;class Admin extends Base{	//管理员登录	public function adminLogin(){				return $this->fetch();	}	//检查管理员登录	public function checkLogin(){		if(request()->isAjax()){			$data=input('post.');  //获取所有post变量			$validate=validate('Admin');			//scene设置验证场景  check验证数据			if(!($validate->scene('adminLogin')->check($data))){				$status=0;				$msg=$validate->getError();			}else{			    				if(!($res=db('fdc_admin')->where('admin_email',$data['adminEmail'])->find())){					$status=0;					$msg='邮箱错误';				}else{					if($res['admin_pwd']!=md5($data['adminPwd'])){						$status=0;						$msg='密码错误';					}else{						if($res['admin_status']==0){							$status=0;							$msg='已经被禁用不可登录';						}else{							$status=1;							$msg='登录成功';							Session::set('admin',$res);							$time=time();							$upd=['login_time'=>$time];							db('fdc_admin')->where('admin_email',$res['admin_email'])->setField($upd);						}											}				}			}			return [				'status'=>$status,				'msg'=>$msg,			];		}	}	//管理员登出	public function adminLogout(){		Session::delete('admin');		$this->success('登出成功','admin/adminLogin');	}	//管理员列表	public function adminList(){		$res=db('fdc_admin')->order('admin_role desc')->select();		$count=count($res);		$data=[			'count'=>$count,			'admin'=>$res,		];		$this->assign($data);		return $this->fetch();	}		//管理员停用	public function adminStop(){		$admin_id=$_GET['admin_id'];		$res=db('fdc_admin')->where('admin_id',$admin_id)->find();		if($res['admin_role']==1){			$this->error('超级管理员不可被停用');		}else{			$upd=['admin_status'=>0];			if(db('fdc_admin')->where('admin_id',$admin_id)->setField($upd)){				$this->success($res['admin_name'].'停用成功');			}else{				$this->error('连接数据库失败');			}		}			}	//管理员停用	public function adminStart(){		$admin_id=$_GET['admin_id'];		$res=db('fdc_admin')->where('admin_id',$admin_id)->find();		$upd=['admin_status'=>1];		if(db('fdc_admin')->where('admin_id',$admin_id)->setField($upd)){			$this->success($res['admin_name'].'启用成功');		}else{			$this->error('连接数据库失败');		}	}	//添加管理员呢	public function adminAdd(){		if(request()->isAjax()){			$data=input('post.');			$validate=validate('Admin');			if(!($validate->scene('adminAdd')->check($data))){				$status=0;				$msg=$validate->getError();			}else{				$time=time();				$upd=[					'admin_name'=>$data['admin_name'],					'login_time'=>$time,					'admin_pwd'=>md5($data['admin_pwd']),					'admin_email'=>$data['admin_email'],				];				if(db('fdc_admin')->insert($upd)){					$status=1;					$msg='提交成功';				}else{					$status=0;					$msg='连接数据库失败';				}			}			return [				'status'=>$status,				'msg'=>$msg,			];		}		return $this->fetch();	}	//删除管理员	public function adminDel(){		$admin_id=$_GET['admin_id'];		$admin=Session::get('admin');		$res=db('fdc_admin')->where('admin_id',$admin_id)->find();		if($res['admin_id']==$admin['admin_id']){			$this->error('您不能删除自己');		}else{			if($res['admin_role']==1){				$this->error('此为超级管理员，不可被删除');			}else{				if(db('fdc_admin')->where('admin_id',$admin_id)->delete()){					$this->success('管理员：'.$res['admin_name'].'删除成功');				}else{					$this->error('连接数据库失败');				}			}		}	}	//管理员修改密码	public function adminEdit(){		if(request()->isAjax()){			$data=input('post.');			$admin_id=$_GET['admin_id'];			$res=db('fdc_admin')->where('admin_id',$admin_id)->find();			$validate=validate('Admin');			if(!($validate->scene('adminEdit')->check($data))){				$status=0;				$msg=$validate->getError();			}else{				if(md5($data['pre_admin_pwd'])!=$res['admin_pwd']){					$status=0;					$msg='原始密码错误';				}else{					$upd=[						'admin_pwd'=>md5($data['new_admin_pwd']),					];					if(db('fdc_admin')->where('admin_id',$admin_id)->setField($upd)){						$status=1;						$msg='修改成功';					}else{						$status=0;						$msg='连接数据库失败';					}				}			}			return [				'status'=>$status,				'msg'=>$msg,			];		}				$admin=Session::get('admin');		$data=[			'admin'=>$admin,		];		$this->assign($data);		return $this->fetch();	}	//文章列表	public function articleList(){		$count=db('fdc_article')->count();		$res=db('fdc_article')->order('article_creatime desc')->paginate(10);		$data=[			'count'=>$count,			'article'=>$res,		];		$this->assign($data);		return $this->fetch();	}	//添加文章	public function articleAdd(){		if(request()->isAjax()){			$admin=Session::get('admin');			$data=input('post.');			$validate=validate('Admin');			if(!($validate->scene('articleAdd')->check($data))){				$status=0;				$msg=$validate->getError();			}else{				$time=time();								$upd=[					'article_author_id'=>$admin['admin_id'],					'article_author'=>$admin['admin_name'],					'article_title'=>$data['article_title'],					'article_content'=>$data['article_content'],					'article_creatime'=>$time,                    'article_des'=>$data['article_des'],                    'article_role'=>$data['article_role'],                    'article_img'=>$data['article_img'],				];				if(db('fdc_article')->insert($upd)){					$status=1;					$msg='提交成功';				}else{					$status=0;					$msg='连接数据库失败';				}			}			return [				'status'=>$status,				'msg'=>$msg,			];		}		return $this->fetch();	}	//文章细节	public function articleDetail(){		$article_id=$_GET['article_id'];		$res=db('fdc_article')->where('article_id',$article_id)->find();		$data=[			'article'=>$res,		];		$this->assign($data);		return $this->fetch();	}	//修改文章	public function articleEdit(){		if(request()->isAjax()){			$data=input('post.');			$article_id=$_GET['article_id'];			$res=db('fdc_article')->where('article_id',$article_id)->find();			$validate=validate('Admin');			if(!($validate->scene('articleAdd')->check($data))){				$status=0;				$msg=$validate->getError();			}else{				$time=time();								$upd=[										'article_role'=>$data['article_role'],					'article_title'=>$data['article_title'],					'article_content'=>$data['article_content'],					'article_creatime'=>$time,					'article_des'=>$data['article_des'],                    'article_role'=>$data['article_role'],                    'article_img'=>$data['article_img'],				];				if(db('fdc_article')->where('article_id',$article_id)->setField($upd)){					$status=1;					$msg='修改成功';				}else{					$status=0;					$msg='连接数据库失败';				}			}			return [				'status'=>$status,				'msg'=>$msg,			];		}		$article_id=$_GET['article_id'];		$res=db('fdc_article')->where('article_id',$article_id)->find();		$data=[			'article'=>$res,		];		$this->assign($data);		return $this->fetch();	}	//删除文章	public function articleDel(){		$article_id=$_GET['article_id'];		if(db('fdc_article')->where('article_id',$article_id)->delete()){			$this->success('删除成功');		}else{			$this->error('连接数据库失败');		}	}	//查询条件列表	public function checkSubwayList(){		$count=db('fdc_subway')->count();		$res=db('fdc_subway')->order('subway_num asc')->select();		$data=[			'count'=>$count,			'subway'=>$res,		];		$this->assign($data);		return $this->fetch();	}	//添加地铁	public function subwayAdd(){		if(request()->isAjax()){			$data=input('post.');			$validate=validate('Admin');			if(!($validate->scene('subwayAdd')->check($data))){				$status=0;				$msg=$validate->getError();			}else{				$upd=[					'subway_num'=>$data['subway_num'],					'subway_name'=>$data['subway_name'],				];				if(db('fdc_subway')->insert($upd)){					$status=1;					$msg='成功';				}else{					$status=0;					$msg='连接数据库失败';				}			}			return [				'status'=>$status,				'msg'=>$msg,			];		}		return $this->fetch();	}	//编辑地铁	public function subwayEdit(){		if(request()->isAjax()){			$input=input('post.');			if(empty($input['esubway_name'])){				$status=0;				$msg='显示内容不能为空';			}else{				$subway_id=$_GET['subway_id'];				if(db('fdc_subway')->where('subway_id',$subway_id)->setField('subway_name',$input['esubway_name'])){					$status=1;					$msg='修改成功';				}else{					$status=0;					$msg='连接数据库失败';				}			}						return [				'status'=>$status,				'msg'=>$msg,			];		}		$subway_id=$_GET['subway_id'];		$res=db('fdc_subway')->where('subway_id',$subway_id)->find();		$data=['subway'=>$res];		$this->assign($data);		return $this->fetch();		}		//删除地铁	public function subwayDel(){		$subway_id=$_GET['subway_id'];		if(db('fdc_subway')->where('subway_id',$subway_id)->delete()){			$this->success('删除成功');		}else{			$this->error('连接数据库失败');		}	}	//查询面积列表	public function checkAreaList(){		$count=db('fdc_area')->count();		$res=db('fdc_area')->order('area_num asc')->select();		$data=[			'count'=>$count,			'area'=>$res,		];		$this->assign($data);		return $this->fetch();	}	//添加面积	public function areaAdd(){		if(request()->isAjax()){			$data=input('post.');			$validate=validate('Admin');			if(!($validate->scene('areaAdd')->check($data))){				$status=0;				$msg=$validate->getError();			}else{				$upd=[					'area_num'=>$data['area_num'],					'area_name'=>$data['area_name'],				];				if(db('fdc_area')->insert($upd)){					$status=1;					$msg='成功';				}else{					$status=0;					$msg='连接数据库失败';				}			}			return [				'status'=>$status,				'msg'=>$msg,			];		}		return $this->fetch();	}	//面积编辑	public function areaEdit(){		if(request()->isAjax()){			$input=input('post.');			if(empty($input['earea_name'])){				$status=0;				$msg='显示内容不能为空';			}else{				$area_id=$_GET['area_id'];				if(db('fdc_area')->where('area_id',$area_id)->setField('area_name',$input['earea_name'])){					$status=1;					$msg='修改成功';				}else{					$status=0;					$msg='连接数据库失败';				}			}						return [				'status'=>$status,				'msg'=>$msg,			];		}		$area_id=$_GET['area_id'];		$res=db('fdc_area')->where('area_id',$area_id)->find();		$data=['area'=>$res];		$this->assign($data);		return $this->fetch();	}	public function areaDel(){		$area_id=$_GET['area_id'];		if(db('fdc_area')->where('area_id',$area_id)->delete()){			$this->success('删除成功');		}else{			$this->error('连接数据库失败');		}	}	//查询租金列表	public function checkrenPriceList(){		$count=db('fdc_renprice')->count();		$res=db('fdc_renprice')->order('renprice_num asc')->select();		$data=[			'count'=>$count,			'renprice'=>$res,		];		$this->assign($data);		return $this->fetch();	}	//添加租金	public function renpriceAdd(){		if(request()->isAjax()){			$data=input('post.');			$validate=validate('Admin');			if(!($validate->scene('renpriceAdd')->check($data))){				$status=0;				$msg=$validate->getError();			}else{				$upd=[					'renprice_num'=>$data['renprice_num'],					'renprice_name'=>$data['renprice_name'],				];				if(db('fdc_renprice')->insert($upd)){					$status=1;					$msg='成功';				}else{					$status=0;					$msg='连接数据库失败';				}			}			return [				'status'=>$status,				'msg'=>$msg,			];		}		return $this->fetch();	}	//租金修改	public function renpriceEdit(){		if(request()->isAjax()){			$input=input('post.');			if(empty($input['erenprice_name'])){				$status=0;				$msg='显示内容不能为空';			}else{				$renprice_id=$_GET['renprice_id'];				if(db('fdc_renprice')->where('renprice_id',$renprice_id)->setField('renprice_name',$input['erenprice_name'])){					$status=1;					$msg='修改成功';				}else{					$status=0;					$msg='连接数据库失败';				}			}						return [				'status'=>$status,				'msg'=>$msg,			];		}		$renprice_id=$_GET['renprice_id'];		$res=db('fdc_renprice')->where('renprice_id',$renprice_id)->find();		$data=['renprice'=>$res];		$this->assign($data);		return $this->fetch();	}	//租金删除	public function renpriceDel(){		$renprice_id=$_GET['renprice_id'];		if(db('fdc_renprice')->where('renprice_id',$renprice_id)->delete()){			$this->success('删除成功');		}else{			$this->error('连接数据库失败');		}	}	//售价查询列表	public function checksaPriceList(){		$count=db('fdc_saprice')->count();		$res=db('fdc_saprice')->order('saprice_num asc')->select();		$data=[			'count'=>$count,			'saprice'=>$res,		];		$this->assign($data);		return $this->fetch();	}	public function sapriceAdd(){		if(request()->isAjax()){			$data=input('post.');			$validate=validate('Admin');			if(!($validate->scene('sapriceAdd')->check($data))){				$status=0;				$msg=$validate->getError();			}else{				$upd=[					'saprice_num'=>$data['saprice_num'],					'saprice_name'=>$data['saprice_name'],				];				if(db('fdc_saprice')->insert($upd)){					$status=1;					$msg='成功';				}else{					$status=0;					$msg='连接数据库失败';				}			}			return [				'status'=>$status,				'msg'=>$msg,			];		}		return $this->fetch();	}	public function sapriceEdit(){		if(request()->isAjax()){			$input=input('post.');			if(empty($input['esaprice_name'])){				$status=0;				$msg='显示内容不能为空';			}else{				$saprice_id=$_GET['saprice_id'];				if(db('fdc_saprice')->where('saprice_id',$saprice_id)->setField('saprice_name',$input['esaprice_name'])){					$status=1;					$msg='修改成功';				}else{					$status=0;					$msg='连接数据库失败';				}			}						return [				'status'=>$status,				'msg'=>$msg,			];		}		$saprice_id=$_GET['saprice_id'];		$res=db('fdc_saprice')->where('saprice_id',$saprice_id)->find();		$data=['saprice'=>$res];		$this->assign($data);		return $this->fetch();	}	public function sapriceDel(){		$saprice_id=$_GET['saprice_id'];		if(db('fdc_saprice')->where('saprice_id',$saprice_id)->delete()){			$this->success('删除成功');		}else{			$this->error('连接数据库失败');		}	}	public function checkRingList(){		$res=db('fdc_ring')->select();		$this->assign('ring',$res);		return $this->fetch();	}	public function ringadd(){		if(request()->isAjax()){            $input=input('post.');            $validate=validate('Validates');            if($validate->scene('addring')->check($input)){                $res=db('fdc_ring')->insert($input);                if($res){                    return show(1,'提交成功');                }else{                    return show(0,'添加失败');                }            }else{                return show(0,$validate->getError());            }        }else{		return $this->fetch();	    }	}	public function ringedit(){		if(request()->isAjax()){            $input=input('post.');            $id=input('get.id');            $validate=validate('Validates');            if($validate->scene('addring')->check($input)) {                $res = db('fdc_ring')->where('id', $id)->update($input);                if ($res) {                    return show(1, '修改成功');                }else{                    return show(0,'修改失败');                }            }else{                return show(0,$validate->getError());            }        }else{        	$id=input('get.id');        	$res=db('fdc_ring')->where('id',$id)->find();        	$this->assign('ring',$res);        	return $this->fetch();        }	}    public function ringdelete(){    	$id=input('get.id');        $res=db('fdc_ring')->where('id',$id)->delete();        if($res){            return true;        }else{            return show(0,'删除失败');        }    }    public function checkDistrict(){    	$res=db('fdc_district')->select();    	$this->assign('dis',$res);    	return $this->fetch();    }    public function districtadd(){    	if(request()->isAjax()){            $input=input('post.');            $validate=validate('Validates');            if($validate->scene('adddis')->check($input)){                $res=db('fdc_district')->insert($input);                if($res){                    return show(1,'提交成功');                }else{                    return show(0,'添加失败');                }            }else{                return show(0,$validate->getError());            }        }else{    	return $this->fetch();        }    }    public function districtedit(){    	if(request()->isAjax()){            $input=input('post.');            $id=input('get.id');            $validate=validate('Validates');            if($validate->scene('adddis')->check($input)) {                $res = db('fdc_district')->where('id', $id)->update($input);                if ($res) {                    return show(1, '修改成功');                }else{                    return show(0,'修改失败');                }            }else{                return show(0,$validate->getError());            }        }else{    	$id=input('get.id');    	$res=db('fdc_district')->where('id',$id)->find();    	$this->assign('dis',$res);    	return $this->fetch();        }    }    public function districtdelete(){    	$id=input('get.id');        $res=db('fdc_district')->where('id',$id)->delete();        if($res){            return true;        }else{            return show(0,'删除失败');        }    }    public function checkregion(){    	$res=db('fdc_region')->select();    	for ($i=0; $i < count($res); $i++) {     		$pid=$res[$i]['pid'];    		$pname=db('fdc_district')->where('id',$pid)->find();    		$res[$i]['pname']=$pname['name'];    	}    	$this->assign('reg',$res);    	return $this->fetch();    }    public function regionadd(){    	if(request()->isAjax()){            $input=input('post.');            $validate=validate('Validates');            if($validate->scene('addreg')->check($input)){                $res=db('fdc_region')->insert($input);                if($res){                    return show(1,'提交成功');                }else{                    return show(0,'添加失败');                }            }else{                return show(0,$validate->getError());            }        }else{    	$res=db('fdc_district')->select();    	$this->assign('p',$res);    	return $this->fetch();        }    }    public function regionedit(){    	if(request()->isAjax()){            $input=input('post.');            $id=input('get.id');            $validate=validate('Validates');            if($validate->scene('addreg')->check($input)) {                $res = db('fdc_region')->where('id', $id)->update($input);                if ($res) {                    return show(1, '修改成功');                }else{                    return show(0,'修改失败');                }            }else{                return show(0,$validate->getError());            }        }else{    	$id=input('get.id');    	$p=db('fdc_district')->select();    	$this->assign('p',$p);    	$res=db('fdc_region')->where('id',$id)->find();    	$this->assign('reg',$res);    	return $this->fetch();        }    }}